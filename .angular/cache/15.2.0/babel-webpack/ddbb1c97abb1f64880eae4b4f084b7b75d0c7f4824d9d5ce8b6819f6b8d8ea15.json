{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../technology/technology.component\";\nimport * as i2 from \"../progress-bar/progress-bar.component\";\nexport class SkillComponent {\n  constructor() {\n    this.currentValue = 0; // the current value of the progress bar animation\n    this.windowHeight = window.innerHeight;\n    this.enteredViewport = false;\n  }\n  ngOnInit() {\n    this.progressBar = document.getElementById(this.skill.id)?.getElementsByTagName(\"app-progress-bar\")[0];\n    this.timeStep = Math.round(this.duration / this.skill.percentage);\n  }\n  onViewportScroll() {\n    //here we want to add the animation classes when the upper part of the progress-bar element enters the viewport\n    const progressBarTop = this.progressBar.getBoundingClientRect().top + this.progressBar.clientHeight;\n    if (progressBarTop <= this.windowHeight && !this.enteredViewport) {\n      this.enteredViewport = true;\n      const intervalID = setInterval(() => {\n        if (this.currentValue < this.skill.percentage) {\n          this.currentValue += 1;\n        } else {\n          clearInterval(intervalID);\n        }\n      }, this.timeStep);\n    }\n  }\n}\nSkillComponent.ɵfac = function SkillComponent_Factory(t) {\n  return new (t || SkillComponent)();\n};\nSkillComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SkillComponent,\n  selectors: [[\"app-skill\"]],\n  hostBindings: function SkillComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function SkillComponent_scroll_HostBindingHandler($event) {\n        return ctx.onViewportScroll($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    skill: \"skill\",\n    duration: \"duration\"\n  },\n  decls: 9,\n  vars: 3,\n  consts: [[\"id\", \"skill.id\", 1, \"skillWrapper\", \"container\"], [1, \"row\", \"technologyRow\"], [1, \"col-4\"], [3, \"name\"], [1, \"row\", \"rowSpacer\", \"informationRow\"], [1, \"row\", \"progressBarRow\"], [3, \"progress\"]],\n  template: function SkillComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-technology\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelement(8, \"app-progress-bar\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"name\", ctx.skill.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.skill.text);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"progress\", ctx.currentValue);\n    }\n  },\n  dependencies: [i1.TechnologyComponent, i2.ProgressBarComponent],\n  styles: [\".informationRow[_ngcontent-%COMP%]{color:#ececec;text-align:start;padding-left:8px}.informationRow[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin-bottom:0}.progressBarRow[_ngcontent-%COMP%]{margin-top:auto;padding-bottom:8px}.skillWrapper[_ngcontent-%COMP%]{width:360px;height:280px;background-color:#2e364a;padding-bottom:10px;border-radius:10px;overflow:hidden;display:flex;flex-direction:column;justify-content:center}.technologyRow[_ngcontent-%COMP%]{display:flex;justify-content:center;padding-top:16px}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}