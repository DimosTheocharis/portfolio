{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../technology/technology.component\";\nimport * as i2 from \"../progress-bar/progress-bar.component\";\nexport class SkillComponent {\n  constructor() {\n    this.currentValue = 0; // the current value of the progress bar animation\n    this.windowHeight = window.innerHeight;\n    this.enteredViewport = false;\n  }\n  ngOnInit() {\n    this.progressBar = document.getElementById(this.skill.id)?.getElementsByTagName(\"app-progress-bar\")[0];\n    this.timeStep = Math.round(this.duration / this.skill.percentage);\n  }\n  onViewportScroll() {\n    //here we want to add the animation classes when the upper part of the progress-bar element enters the viewport\n    const progressBarTop = this.progressBar.getBoundingClientRect().top + this.progressBar.clientHeight;\n    if (progressBarTop <= this.windowHeight && !this.enteredViewport) {\n      this.enteredViewport = true;\n      const intervalID = setInterval(() => {\n        if (this.currentValue < this.skill.percentage) {\n          this.currentValue += 1;\n        } else {\n          clearInterval(intervalID);\n        }\n      }, this.timeStep);\n    }\n  }\n}\nSkillComponent.ɵfac = function SkillComponent_Factory(t) {\n  return new (t || SkillComponent)();\n};\nSkillComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SkillComponent,\n  selectors: [[\"app-skill\"]],\n  hostBindings: function SkillComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function SkillComponent_scroll_HostBindingHandler($event) {\n        return ctx.onViewportScroll($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    skill: \"skill\",\n    duration: \"duration\"\n  },\n  decls: 9,\n  vars: 3,\n  consts: [[\"id\", \"skill.id\", 1, \"skillWrapper\", \"container\"], [1, \"row\", \"technologyRow\"], [1, \"col-4\"], [3, \"name\"], [1, \"row\", \"rowSpacer\", \"informationRow\"], [1, \"row\", \"progressBarRow\"], [3, \"progress\"]],\n  template: function SkillComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"app-technology\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 5);\n      i0.ɵɵelement(8, \"app-progress-bar\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"name\", ctx.skill.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.skill.text);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"progress\", ctx.currentValue);\n    }\n  },\n  dependencies: [i1.TechnologyComponent, i2.ProgressBarComponent],\n  styles: [\".informationRow[_ngcontent-%COMP%] {\\n  color: rgb(236, 236, 236);\\n  text-align: start;\\n  padding-left: 8px;\\n}\\n.informationRow[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  margin-bottom: 0px;\\n}\\n\\n.progressBarRow[_ngcontent-%COMP%] {\\n  margin-top: auto;\\n  padding-bottom: 8px;\\n}\\n\\n.skillWrapper[_ngcontent-%COMP%] {\\n  width: 360px;\\n  height: 280px;\\n  background-color: rgb(46, 54, 74);\\n  padding-bottom: 10px;\\n  border-radius: 10px;\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n}\\n\\n.technologyRow[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  padding-top: 16px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy9za2lsbC9za2lsbC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9zY3NzL3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vJUNFJTk0JUNFJUI3JUNFJUJDJUNFJUJGJUNGJTgzJUNFJUI4JUNFJUFEJUNFJUJEJUNFJUI3JUNGJTgyL1Byb2dyYW1taW5nL3BvcnRmb2xpby9zcmMvYXBwL0NvbXBvbmVudHMvc2tpbGwvc2tpbGwuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDSSx5QkFBQTtFQUNBLGlCQUFBO0VBQ0EsaUJDQ0s7QUNGVDtBRkdJO0VBQ0ksa0JBQUE7QUVEUjs7QUZLQTtFQUNJLGdCQUFBO0VBQ0EsbUJDUks7QUNNVDs7QUZLQTtFQUNJLFlBQUE7RUFDQSxhQUFBO0VBQ0EsaUNDbkJhO0VEb0JiLG9CQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHVCQUFBO0FFRko7O0FGS0E7RUFDSSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxpQkFBQTtBRUZKIiwic291cmNlc0NvbnRlbnQiOlsiQHVzZSBcInNyYy9zY3NzL3ZhcmlhYmxlc1wiIGFzIHY7XHJcblxyXG4uaW5mb3JtYXRpb25Sb3cge1xyXG4gICAgY29sb3I6IHYuJGFjY2VudENvbG9yMjtcclxuICAgIHRleHQtYWxpZ246IHN0YXJ0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiB2LiRwYWRkZXI7XHJcblxyXG4gICAgcCB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMHB4O1xyXG4gICAgfVxyXG59XHJcblxyXG4ucHJvZ3Jlc3NCYXJSb3cge1xyXG4gICAgbWFyZ2luLXRvcDogYXV0bztcclxuICAgIHBhZGRpbmctYm90dG9tOiB2LiRwYWRkZXI7XHJcbn1cclxuXHJcbi5za2lsbFdyYXBwZXIge1xyXG4gICAgd2lkdGg6IDM2MHB4O1xyXG4gICAgaGVpZ2h0OiAyODBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHYuJHNlY29uZGFyeUNvbG9yO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi50ZWNobm9sb2d5Um93IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiBjYWxjKDIgKiB2LiRwYWRkZXIpO1xyXG59IiwiJHByaW1hcnlDb2xvcjogcmdiKDAsIDAsIDApO1xyXG4kc2Vjb25kYXJ5Q29sb3I6IHJnYig0NiwgNTQsIDc0KTtcclxuJGFjY2VudENvbG9yOiByZ2IoMTcwLCA0MSwgMjUwKTtcclxuJGFjY2VudENvbG9yMjogcmdiKDIzNiwgMjM2LCAyMzYpO1xyXG4kYWNjZW50Q29sb3IzOiByZ2IoMjUwLCAxNzAsIDQwKTtcclxuXHJcbiRwYWRkZXI6IDhweDsiLCIuaW5mb3JtYXRpb25Sb3cge1xuICBjb2xvcjogcmdiKDIzNiwgMjM2LCAyMzYpO1xuICB0ZXh0LWFsaWduOiBzdGFydDtcbiAgcGFkZGluZy1sZWZ0OiA4cHg7XG59XG4uaW5mb3JtYXRpb25Sb3cgcCB7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbn1cblxuLnByb2dyZXNzQmFyUm93IHtcbiAgbWFyZ2luLXRvcDogYXV0bztcbiAgcGFkZGluZy1ib3R0b206IDhweDtcbn1cblxuLnNraWxsV3JhcHBlciB7XG4gIHdpZHRoOiAzNjBweDtcbiAgaGVpZ2h0OiAyODBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDQ2LCA1NCwgNzQpO1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi50ZWNobm9sb2d5Um93IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAxNnB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EAL3BC;IASS,iBAAY,GAAW,CAAC,CAAC,CAAC;IAIzB,iBAAY,GAAWC,MAAM,CAACC,WAAW;IACzC,oBAAe,GAAY,KAAK;;EAExCC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,IAAI,CAACC,KAAK,CAACC,EAAE,CAAC,EAAEC,oBAAoB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAA2B;IAChI,IAAI,CAACC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACN,KAAK,CAACO,UAAU,CAAC;EACnE;EAGOC,gBAAgB;IACrB;IACA,MAAMC,cAAc,GAAG,IAAI,CAACZ,WAAY,CAACa,qBAAqB,EAAE,CAACC,GAAG,GAAG,IAAI,CAACd,WAAW,CAACe,YAAY;IAEpG,IAAIH,cAAc,IAAI,IAAI,CAACI,YAAY,IAAI,CAAC,IAAI,CAACC,eAAe,EAAE;MAChE,IAAI,CAACA,eAAe,GAAG,IAAI;MAE3B,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAK;QAClC,IAAI,IAAI,CAACC,YAAY,GAAG,IAAI,CAACjB,KAAK,CAACO,UAAU,EAAE;UAC7C,IAAI,CAACU,YAAY,IAAI,CAAC;SACvB,MAAM;UACLC,aAAa,CAACH,UAAU,CAAC;;MAE7B,CAAC,EAAE,IAAI,CAACZ,QAAQ,CAAC;;EAErB;;AAhCWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA2B;EAAAC;IAAA;;eAAdC,4BACP;MAAA;;;;;;;;;;;;MCTNC,8BAAkD;MAGtCA,oCAAqD;MACzDA,iBAAM;MAEVA,8BAA0C;MACnCA,YAAc;MAAAA,iBAAI;MAIzBA,8BAAgC;MAC5BA,sCAA+D;MACnEA,iBAAM;;;MAVkBA,eAAmB;MAAnBA,qCAAmB;MAIpCA,eAAc;MAAdA,oCAAc;MAKCA,eAAyB;MAAzBA,2CAAyB","names":["SkillComponent","constructor","window","innerHeight","ngOnInit","progressBar","document","getElementById","skill","id","getElementsByTagName","timeStep","Math","round","duration","percentage","onViewportScroll","progressBarTop","getBoundingClientRect","top","clientHeight","windowHeight","enteredViewport","intervalID","setInterval","currentValue","clearInterval","selectors","hostBindings","ctx","i0"],"sourceRoot":"","sources":["C:\\Users\\dimos\\Desktop\\Δημοσθένης\\Programming\\portfolio\\src\\app\\Components\\skill\\skill.component.ts","C:\\Users\\dimos\\Desktop\\Δημοσθένης\\Programming\\portfolio\\src\\app\\Components\\skill\\skill.component.html"],"sourcesContent":["import { Component, Input, HostListener } from '@angular/core';\r\nimport { SkillModel } from 'src/app/Models/skill/skillModel';\r\n\r\n@Component({\r\n  selector: 'app-skill',\r\n  templateUrl: './skill.component.html',\r\n  styleUrls: ['./skill.component.scss']\r\n})\r\nexport class SkillComponent {\r\n  @Input() skill!: SkillModel;\r\n  @Input() duration!: number;\r\n\r\n  public currentValue: number = 0; // the current value of the progress bar animation\r\n  private timeStep!: number; // the amount of milliseconds that should pass between 2 consecutive steps of the animation\r\n  private progressBar!: HTMLElement;\r\n\r\n  private windowHeight: number = window.innerHeight;\r\n  private enteredViewport: boolean = false;\r\n\r\n  ngOnInit() {\r\n    this.progressBar = document.getElementById(this.skill.id)?.getElementsByTagName(\"app-progress-bar\")[0] as unknown as HTMLElement;\r\n    this.timeStep = Math.round(this.duration / this.skill.percentage);\r\n  }\r\n\r\n  @HostListener(\"document:scroll\", [\"$event\"])\r\n  public onViewportScroll() {\r\n    //here we want to add the animation classes when the upper part of the progress-bar element enters the viewport\r\n    const progressBarTop = this.progressBar!.getBoundingClientRect().top + this.progressBar.clientHeight;\r\n\r\n    if (progressBarTop <= this.windowHeight && !this.enteredViewport) {\r\n      this.enteredViewport = true;\r\n\r\n      const intervalID = setInterval(() => {\r\n        if (this.currentValue < this.skill.percentage) {\r\n          this.currentValue += 1;\r\n        } else {\r\n          clearInterval(intervalID)\r\n        }\r\n      }, this.timeStep)\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"skillWrapper container\" id=\"skill.id\">\r\n    <div class=\"row technologyRow\">\r\n        <div class=\"col-4\">\r\n            <app-technology [name]=\"skill.name\"></app-technology>\r\n        </div>\r\n    </div>\r\n    <div class=\"row rowSpacer informationRow\">\r\n        <p>{{skill.text}}</p>\r\n    </div>\r\n\r\n\r\n    <div class=\"row progressBarRow\">\r\n        <app-progress-bar [progress]=\"currentValue\"></app-progress-bar>\r\n    </div>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}