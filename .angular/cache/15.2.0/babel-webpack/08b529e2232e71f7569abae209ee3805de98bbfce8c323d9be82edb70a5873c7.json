{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction ProgressBarComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 5);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"width\": a0\n  };\n};\nexport class ProgressBarComponent {\n  constructor() {\n    this.totalStages = 5;\n    this.fakeArray = Array(this.totalStages); //used to loop through it in html\n  }\n\n  ngOnInit() {\n    this.currentProgressString = `${this.progress}%`;\n  }\n  /**\r\n   * Every time the value of the input 'progress' changes, this function ensures the continuation of the animation by\r\n   * changing the percentage appeared the frontend, and the width of the progress bar\r\n   * @param changes\r\n   */\n  ngOnChanges(changes) {\n    this.currentProgressString = `${this.progress}%`;\n  }\n}\nProgressBarComponent.ɵfac = function ProgressBarComponent_Factory(t) {\n  return new (t || ProgressBarComponent)();\n};\nProgressBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProgressBarComponent,\n  selectors: [[\"app-progress-bar\"]],\n  inputs: {\n    progress: \"progress\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 5,\n  consts: [[1, \"wrapper\"], [1, \"progress-bar\"], [1, \"stages\"], [\"class\", \"vertical-line\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"progress\", 3, \"ngStyle\"], [1, \"vertical-line\"]],\n  template: function ProgressBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, ProgressBarComponent_div_3_Template, 1, 0, \"div\", 3);\n      i0.ɵɵelement(4, \"div\", 4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"p\");\n      i0.ɵɵtext(6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.fakeArray);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c0, ctx.currentProgressString));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.currentProgressString);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgStyle],\n  styles: [\".progress-bar[_ngcontent-%COMP%] {\\n  width: 280px;\\n  height: 30px;\\n  border-radius: 8px;\\n  background-color: rgb(46, 54, 74);\\n  border: 3px solid rgb(0, 0, 0);\\n  position: relative;\\n}\\n\\n#progress[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0px;\\n  left: 0px;\\n  height: 100%;\\n  background-color: rgb(170, 41, 250);\\n  z-index: 1;\\n}\\n\\n.vertical-line[_ngcontent-%COMP%]:nth-child(1) {\\n  position: absolute;\\n  top: 0px;\\n  left: 54px;\\n  width: 4px;\\n  height: 100%;\\n  background-color: rgb(0, 0, 0);\\n  z-index: 2;\\n}\\n\\n.vertical-line[_ngcontent-%COMP%]:nth-child(2) {\\n  position: absolute;\\n  top: 0px;\\n  left: 110px;\\n  width: 4px;\\n  height: 100%;\\n  background-color: rgb(0, 0, 0);\\n  z-index: 2;\\n}\\n\\n.vertical-line[_ngcontent-%COMP%]:nth-child(3) {\\n  position: absolute;\\n  top: 0px;\\n  left: 166px;\\n  width: 4px;\\n  height: 100%;\\n  background-color: rgb(0, 0, 0);\\n  z-index: 2;\\n}\\n\\n.vertical-line[_ngcontent-%COMP%]:nth-child(4) {\\n  position: absolute;\\n  top: 0px;\\n  left: 222px;\\n  width: 4px;\\n  height: 100%;\\n  background-color: rgb(0, 0, 0);\\n  z-index: 2;\\n}\\n\\n.wrapper[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  width: 340px;\\n  height: 30px;\\n}\\n.wrapper[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  color: rgb(236, 236, 236);\\n  margin: 0px;\\n  padding-right: 8px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvQ29tcG9uZW50cy9wcm9ncmVzcy1iYXIvcHJvZ3Jlc3MtYmFyLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vc3JjL3Njc3MvdmFyaWFibGVzLnNjc3MiLCJ3ZWJwYWNrOi8vLi8uLi8uLi8uLi8lQ0UlOTQlQ0UlQjclQ0UlQkMlQ0UlQkYlQ0YlODMlQ0UlQjglQ0UlQUQlQ0UlQkQlQ0UlQjclQ0YlODIvUHJvZ3JhbW1pbmcvcG9ydGZvbGlvL3NyYy9hcHAvQ29tcG9uZW50cy9wcm9ncmVzcy1iYXIvcHJvZ3Jlc3MtYmFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQVFBO0VBQ0ksWUFMSTtFQU1KLFlBTEs7RUFNTCxrQkFBQTtFQUNBLGlDQ1hhO0VEWWIsOEJBQUE7RUFDQSxrQkFBQTtBRVBKOztBRlVBO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtFQUNBLFlBQUE7RUFDQSxtQ0NwQlU7RURxQlYsVUFBQTtBRVBKOztBRldJO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0VBQ0EsVUFBQTtFQUNBLFVBQUE7RUFDQSxZQUFBO0VBQ0EsOEJDakNPO0VEa0NQLFVBQUE7QUVSUjs7QUZDSTtFQUNJLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLDhCQ2pDTztFRGtDUCxVQUFBO0FFRVI7O0FGVEk7RUFDSSxrQkFBQTtFQUNBLFFBQUE7RUFDQSxXQUFBO0VBQ0EsVUFBQTtFQUNBLFlBQUE7RUFDQSw4QkNqQ087RURrQ1AsVUFBQTtBRVlSOztBRm5CSTtFQUNJLGtCQUFBO0VBQ0EsUUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsWUFBQTtFQUNBLDhCQ2pDTztFRGtDUCxVQUFBO0FFc0JSOztBRmxCQTtFQUNJLGFBQUE7RUFDQSw4QkFBQTtFQUNBLG1CQUFBO0VBQ0EsWUF2Q1M7RUF3Q1QsWUF0Q0s7QUUyRFQ7QUZuQkk7RUFDSSx5QkMzQ087RUQ0Q1AsV0FBQTtFQUNBLGtCQzFDQztBQytEVCIsInNvdXJjZXNDb250ZW50IjpbIkB1c2UgXCJzcmMvc2Nzcy92YXJpYWJsZXNcIiBhcyB2O1xyXG5cclxuJHRvdGFsU3RhZ2VzOiA1O1xyXG4kdG90YWxXaWR0aDogMzQwcHg7XHJcbiR3aWR0aDogY2FsYygkdG90YWxXaWR0aCAtIDYwcHgpO1xyXG4kaGVpZ2h0OiAzMHB4O1xyXG4kc3RhZ2VXaWR0aDogY2FsYygkd2lkdGggLyAkdG90YWxTdGFnZXMpO1xyXG5cclxuLnByb2dyZXNzLWJhciB7XHJcbiAgICB3aWR0aDogJHdpZHRoO1xyXG4gICAgaGVpZ2h0OiAkaGVpZ2h0O1xyXG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdi4kc2Vjb25kYXJ5Q29sb3I7XHJcbiAgICBib3JkZXI6IDNweCBzb2xpZCB2LiRwcmltYXJ5Q29sb3I7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbiNwcm9ncmVzcyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDBweDtcclxuICAgIGxlZnQ6IDBweDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHYuJGFjY2VudENvbG9yO1xyXG4gICAgei1pbmRleDogMTtcclxufVxyXG5cclxuQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkdG90YWxTdGFnZXMgLSAxIHtcclxuICAgIC52ZXJ0aWNhbC1saW5lOm50aC1jaGlsZCgjeyRpfSkge1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICB0b3A6IDBweDtcclxuICAgICAgICBsZWZ0OiBjYWxjKCRpICogJHN0YWdlV2lkdGggLSAycHgpO1xyXG4gICAgICAgIHdpZHRoOiA0cHg7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHYuJHByaW1hcnlDb2xvcjtcclxuICAgICAgICB6LWluZGV4OiAyO1xyXG4gICAgfVxyXG59XHJcblxyXG4ud3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHdpZHRoOiAkdG90YWxXaWR0aDtcclxuICAgIGhlaWdodDogJGhlaWdodDtcclxuXHJcbiAgICBwIHtcclxuICAgICAgICBjb2xvcjogdi4kYWNjZW50Q29sb3IyO1xyXG4gICAgICAgIG1hcmdpbjogMHB4O1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IHYuJHBhZGRlcjtcclxuICAgIH1cclxufSIsIiRwcmltYXJ5Q29sb3I6IHJnYigwLCAwLCAwKTtcclxuJHNlY29uZGFyeUNvbG9yOiByZ2IoNDYsIDU0LCA3NCk7XHJcbiRhY2NlbnRDb2xvcjogcmdiKDE3MCwgNDEsIDI1MCk7XHJcbiRhY2NlbnRDb2xvcjI6IHJnYigyMzYsIDIzNiwgMjM2KTtcclxuJGFjY2VudENvbG9yMzogcmdiKDI1MCwgMTcwLCA0MCk7XHJcblxyXG4kcGFkZGVyOiA4cHg7IiwiLnByb2dyZXNzLWJhciB7XG4gIHdpZHRoOiAyODBweDtcbiAgaGVpZ2h0OiAzMHB4O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig0NiwgNTQsIDc0KTtcbiAgYm9yZGVyOiAzcHggc29saWQgcmdiKDAsIDAsIDApO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG5cbiNwcm9ncmVzcyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTcwLCA0MSwgMjUwKTtcbiAgei1pbmRleDogMTtcbn1cblxuLnZlcnRpY2FsLWxpbmU6bnRoLWNoaWxkKDEpIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgbGVmdDogNTRweDtcbiAgd2lkdGg6IDRweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCk7XG4gIHotaW5kZXg6IDI7XG59XG5cbi52ZXJ0aWNhbC1saW5lOm50aC1jaGlsZCgyKSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDExMHB4O1xuICB3aWR0aDogNHB4O1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAwLCAwKTtcbiAgei1pbmRleDogMjtcbn1cblxuLnZlcnRpY2FsLWxpbmU6bnRoLWNoaWxkKDMpIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDBweDtcbiAgbGVmdDogMTY2cHg7XG4gIHdpZHRoOiA0cHg7XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDAsIDApO1xuICB6LWluZGV4OiAyO1xufVxuXG4udmVydGljYWwtbGluZTpudGgtY2hpbGQoNCkge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMHB4O1xuICBsZWZ0OiAyMjJweDtcbiAgd2lkdGg6IDRweDtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCk7XG4gIHotaW5kZXg6IDI7XG59XG5cbi53cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB3aWR0aDogMzQwcHg7XG4gIGhlaWdodDogMzBweDtcbn1cbi53cmFwcGVyIHAge1xuICBjb2xvcjogcmdiKDIzNiwgMjM2LCAyMzYpO1xuICBtYXJnaW46IDBweDtcbiAgcGFkZGluZy1yaWdodDogOHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;IAGYA,yBAAiE;;;;;;;;ACI7E,OAAM,MAAOC,oBAAoB;EAO/BC;IAJO,gBAAW,GAAW,CAAC;IACvB,cAAS,GAAkBC,KAAK,CAAC,IAAI,CAACC,WAAW,CAAC,CAAC,CAAC;EAG3C;;EAEhBC,QAAQ;IACN,IAAI,CAACC,qBAAqB,GAAG,GAAG,IAAI,CAACC,QAAQ,GAAG;EAClD;EAEA;;;;;EAKAC,WAAW,CAACC,OAAsB;IAChC,IAAI,CAACH,qBAAqB,GAAG,GAAG,IAAI,CAACC,QAAQ,GAAG;EAClD;;AApBWN,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAS;EAAAC;IAAAJ;EAAA;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPjChB,8BAAqB;MAGTA,qEAAiE;MACjEA,yBAAsE;MAC1EA,iBAAM;MAEVA,yBAAG;MAAAA,YAAyB;MAAAA,iBAAI;;;MAJqBA,eAAY;MAAZA,uCAAY;MACtCA,eAA4C;MAA5CA,+EAA4C;MAGpEA,eAAyB;MAAzBA,+CAAyB","names":["i0","ProgressBarComponent","constructor","Array","totalStages","ngOnInit","currentProgressString","progress","ngOnChanges","changes","selectors","inputs","features","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\dimos\\Desktop\\Δημοσθένης\\Programming\\portfolio\\src\\app\\Components\\progress-bar\\progress-bar.component.html","C:\\Users\\dimos\\Desktop\\Δημοσθένης\\Programming\\portfolio\\src\\app\\Components\\progress-bar\\progress-bar.component.ts"],"sourcesContent":["<div class=\"wrapper\">\r\n    <div class=\"progress-bar\">\r\n        <div class=\"stages\">\r\n            <div class=\"vertical-line\" *ngFor=\"let stage of fakeArray\"></div>\r\n            <div id=\"progress\" [ngStyle]=\"{'width': currentProgressString}\"></div>\r\n        </div>\r\n    </div>\r\n    <p>{{currentProgressString}}</p>\r\n</div>","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss']\r\n})\r\nexport class ProgressBarComponent implements OnInit, OnChanges {\r\n  @Input() progress!: number;\r\n\r\n  public totalStages: number = 5;\r\n  public fakeArray: Array<number> = Array(this.totalStages); //used to loop through it in html\r\n  public currentProgressString!: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentProgressString = `${this.progress}%`;\r\n  }\r\n\r\n  /**\r\n   * Every time the value of the input 'progress' changes, this function ensures the continuation of the animation by\r\n   * changing the percentage appeared the frontend, and the width of the progress bar\r\n   * @param changes \r\n   */\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.currentProgressString = `${this.progress}%`;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}